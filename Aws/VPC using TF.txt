>main.tf

	provider "aws" {
		access_key = "ACCESS_KEY"
		secret_key = "SECRET_KEY"
		region = "ap-south-1"
	}

	#Creating VPC, name, CIDR and tags
	resource "aws_vpc" "dev" {
		cidr_block = "10.0.0.0/16"
		instance_tenancy = "default"
		enable_dns_support = "ture"
		enable_dns_hostnames = "true"
		enable_classiclink = "false"
		tags = {
			Name = "dev"
		}
	}

	#Creating public subnet in VPC
	resource "aws_subnet" "dev-public-1" {
		vpc_id = aws_vpc.dev.id
		cidr_block = "10.0.1.0/24"
		map_public_ip_on_launch = "true"
		availability_zone = "ap-south-la"
		tags = {
			Name = "dev-public-1"
		}
	}
	resource "aws_subnet" "dev-public-2" {
		vpc_id = aws_vpc.dev.id
		cidr_block = "10.0.1.0/24"
		map_public_ip_on_launch = "true"
		availability_zone = "ap-south-lb"
		tags = {
			Name = "dev-public-2"
		}
	}

	#Creating Internet Gateway in AWS VPC
	resource "aws_internet_gateway" "dev-gw" {
		vpc_id = aws_vpc.dev.id
		tags = {
			Name = "dev"
		}
	}
	
	#Creating Route tables for Internet gateway
	resource "aws_route_table" "dev-public" {
		vpc_id = aws_vpc.dev.id
		route {
			cidr_block = "0.0.0.0/0"
			gateway_id = aws_internet_gateway.dev-gw.id
		}
		tags = {
			Name = "dev-public-1"
		}
	}
	
	#Creating Route Association public subnets
	resource "aws_route_table_association" "dev-public-1-a" {
		subnet_id = aws_subnet.dev-public-1.id
		route_table_id = aws_route_table.dev-public.id
	}
	resource "aws_route_table_association" "dev-public-2-a" {
		subnet_id = aws_subnet.dev-public-2.id
		route_table_id = aws_route_table.dev-public.id
	}

	#Creating EC2 instances in public subnets
	resource "aws_instance" "public_inst_1" {
		ami = "ami-9u7tcbsxd"
		instance_type = "t2.micro"
		subnet_id = "${aws_subnet.dev-public-1.id}"
		key_name = "key11"
		tags = {
			Name = "public_inst_1"
		}
	}
	resource "aws_instance" "public_inst_2" {
		ami = "ami-9u7tcbsxd"
		instance_type = "t2.micro"
		subnet_id = "${aws_subnet.dev-public-2.id}"
		key_name = "key11"
		tags = {
			Name = "public_inst_2"
		}
	}



-save the file and run the command > terraform init
				   > terraform plan
				   > terraform apply > yes
				   > 







+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

ref:
aws vpc using terraform - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/vpc
aws subnet terraform - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/subnet
aws igw terraform - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/internet_gateway
aws route table terraform - https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/route_table